---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pihole-local-dnsmasq-volume
  labels:
    directory: dnsmasq
spec:
  storageClassName: local
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /home/pi/containers/pihole-dnsmasq

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-local-dnsmasq-claim
spec:
  storageClassName: local
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
  selector:
    matchLabels:
      directory: dnsmasq

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pihole-local-containers-volume
  labels:
    directory: pihole
spec:
  storageClassName: local
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /home/pi/containers/pihole

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-local-containers-claim
spec:
  storageClassName: local
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      directory: pihole

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
        name: pihole
    spec:
      containers:
        - name: pihole
          image: pihole/pihole:latest
          securityContext:
            privileged: true
          env:
            - name: TZ
              value: "Europe/Amsterdam"
            - name: DNS1
              value: "9.9.9.9"
            - name: DNS2
              value: "149.112.112.112"
            - name: ServerIP
              value: "192.168.1.207"
            - name: WEBPASSWORD
              value: "<a-password>"
          volumeMounts:
            - name: pihole-local-containers-volume
              mountPath: "/etc/pihole"
            - name: pihole-local-dnsmasq-volume
              mountPath: "/etc/dnsmasq.d"
      volumes:
        - name: pihole-local-containers-volume
          persistentVolumeClaim:
            claimName: pihole-local-containers-claim
        - name: pihole-local-dnsmasq-volume
          persistentVolumeClaim:
            claimName: pihole-local-dnsmasq-claim
---
apiVersion: v1
kind: Service
metadata:
  name: pihole
spec:
  selector:
    app: pihole
  ports:
    - port: 8000
      targetPort: 80
      name: pihole-admin
    - port: 53
      targetPort: 53
      protocol: TCP
      name: dns-tcp
    - port: 53
      targetPort: 53
      protocol: UDP
      name: dns-udp
  externalIPs:
    - <ip>
